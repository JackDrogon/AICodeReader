version: "2"
run:
  go: "1.24"
  modules-download-mode: readonly
output:
  path-prefix: ""
linters:
  default: none
  enable:
    - asciicheck
    - bidichk
    - bodyclose
    - copyloopvar
    - depguard
    - dogsled
    - dupl
    - errcheck
    - errname
    - errorlint
    - exhaustive
    - funlen
    - gocognit
    - gocyclo
    - godot
    - gomodguard
    - gosec
    - govet
    - ineffassign
    - intrange
    - mirror
    - misspell
    - nakedret
    - nestif
    - noctx
    - prealloc
    - revive
    - rowserrcheck
    - sloglint
    - staticcheck
    - testpackage
    - thelper
    - unconvert
    - unparam
    - unused
    - whitespace
  settings:
    depguard:
      rules:
        main:
          allow:
            - $gostd
            - github.com/sashabaranov/go-openai
            - github.com/sabhiram/go-gitignore
    errorlint:
      errorf: true
      errorf-multi: true
      asserts: true
      comparison: true
    exhaustive:
      default-signifies-exhaustive: false
    funlen:
      lines: 100
      statements: 50
    gocognit:
      min-complexity: 40
    gocritic:
      disabled-checks:
        - dupImport
        - ifElseChain
        - octalLiteral
        - whyNoLint
        - wrapperFunc
      enabled-tags:
        - diagnostic
        - experimental
        - opinionated
        - performance
        - style
    gocyclo:
      min-complexity: 20
    gosec:
      severity: medium
      confidence: medium
    govet:
      disable:
        - fieldalignment
      enable-all: true
    lll:
      line-length: 120
    misspell:
      locale: US
    mnd:
      checks:
        - argument
        - case
        - condition
        - operation
        - return
      ignored-numbers:
        - "0"
        - "1"
        - "2"
        - "10"
    nakedret:
      max-func-lines: 30
    nestif:
      min-complexity: 15
    prealloc:
      simple: true
      range-loops: true
      for-loops: false
    revive:
      rules:
        - name: var-naming
        - name: range-val-in-closure
        - name: struct-tag
        - name: blank-imports
        - name: context-as-argument
        - name: context-keys-type
        - name: dot-imports
        - name: error-return
        - name: error-strings
        - name: error-naming
        - name: increment-decrement
        - name: var-declaration
        - name: range
        - name: receiver-naming
        - name: time-naming
        - name: unexported-return
        - name: indent-error-flow
        - name: errorf
    unparam:
      check-exported: false
    whitespace:
      multi-if: false
      multi-func: false
  exclusions:
    generated: lax
    rules:
      - linters:
          - dupl
          - errcheck
          - funlen
          - gocognit
          - gocyclo
          - gosec
          - nestif
        path: _test\.go
      - linters:
          - errcheck
        text: Error return value of .((os\.)?std(out|err)\..*|.*Close|.*Flush|os\.Remove(All)?|.*printf?|os\.(Un)?Setenv). is not checked
      - linters:
          - gosec
          - staticcheck
          - unused
        path: vendor/
      - linters:
          - lll
        path: \\.pb\\.go$
      - linters:
          - gochecknoglobals
        path: cmd/
      - linters:
          - revive
        text: "don't use underscores in Go names"
        path: cmd/
      - linters:
          - godot
        text: "Comment should end in a period"
        path: cmd/
      - linters:
          - errorlint
        text: "comparing with == will fail on wrapped errors"
        path: cmd/
      - linters:
          - unused
        text: "is unused"
        path: cmd/
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
  fix: false
severity:
  default: error
formatters:
  enable:
    - gofmt
    - goimports
  settings:
    gofmt:
      simplify: true
    goimports:
      local-prefixes:
        - github.com/JackDrogon/aicodereader
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$
